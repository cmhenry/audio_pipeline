Bootstrap: docker
From: ubuntu:22.04

%labels
    Author TikTok Audio Pipeline Team
    Version 1.1
    Description Pipeline utilities container with database tools, Globus CLI, and monitoring (venv-based)

%environment
    export PYTHONPATH=/opt/audio_pipeline/src:$PYTHONPATH
    export PATH=/opt/venv/bin:/opt/globus-cli/bin:$PATH
    export VIRTUAL_ENV=/opt/venv

%post
    # Update system and install system dependencies
    apt-get update && apt-get install -y \
        postgresql-client \
        python3.10 \
        python3.10-dev \
        python3.10-venv \
        curl \
        wget \
        git \
        build-essential \
        software-properties-common \
        && rm -rf /var/lib/apt/lists/*

    # Create symlink for python
    ln -sf /usr/bin/python3.10 /usr/bin/python
    ln -sf /usr/bin/python3.10 /usr/bin/python3

    # Create virtual environment to avoid system package conflicts
    python -m venv /opt/venv
    . /opt/venv/bin/activate

    # Upgrade pip and install build tools in venv
    pip install --upgrade pip setuptools wheel

    # Install core Python dependencies for database operations
    pip install \
        psycopg2-binary \
        pandas \
        pyarrow \
        flask \
        numpy \
        requests \
        click

    # Install Globus CLI and SDK
    pip install globus-cli globus-sdk

    # Create application directories
    mkdir -p /opt/audio_pipeline/src
    mkdir -p /opt/audio_pipeline/data
    mkdir -p /opt/audio_pipeline/logs
    mkdir -p /opt/globus-cli/bin

    # Set permissions
    chmod -R 755 /opt/audio_pipeline

%runscript
    #!/bin/bash
    . /opt/venv/bin/activate
    exec python "$@"

%help
    This container provides utilities for the audio processing pipeline:
    - PostgreSQL client tools and Python adapters
    - Globus CLI for data transfer operations
    - Database utility scripts (db_utils.py)
    - Flask monitoring API
    - Pandas for data processing
    - All dependencies in isolated virtual environment
    
    Usage:
    singularity run pipeline_utils_venv.sif /path/to/script.py [args]
    
    Examples:
    # Database operations
    singularity run pipeline_utils_venv.sif db_utils.py --db-string "$DB_CREDS" test-connection
    
    # Globus operations  
    singularity exec pipeline_utils_venv.sif globus transfer [options]
    
    # Monitoring API
    singularity run pipeline_utils_venv.sif monitor_pipeline.py