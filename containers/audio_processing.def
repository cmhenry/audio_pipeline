Bootstrap: docker
From: nvidia/cuda:12.1.0-cudnn8-devel-ubuntu22.04

%labels
    Author TikTok Audio Pipeline Team
    Version 1.1
    Description Audio processing container with WhisperX, PyTorch, and CUDA support (venv-based)

%environment
    export CUDA_HOME=/usr/local/cuda
    export PATH=/opt/venv/bin:/usr/local/cuda/bin:$PATH
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
    export PYTHONPATH=/opt/audio_pipeline/src:$PYTHONPATH
    export TORCH_CUDA_ARCH_LIST="8.0;8.6;8.9;9.0"
    export VIRTUAL_ENV=/opt/venv

%post
    # Update system and install system dependencies
    apt-get update && apt-get install -y \
        ffmpeg \
        git \
        python3.10 \
        python3.10-dev \
        python3.10-venv \
        wget \
        curl \
        build-essential \
        software-properties-common \
        && rm -rf /var/lib/apt/lists/*

    # Create symlink for python
    ln -sf /usr/bin/python3.10 /usr/bin/python
    ln -sf /usr/bin/python3.10 /usr/bin/python3

    # Create virtual environment to avoid system package conflicts
    python -m venv /opt/venv
    . /opt/venv/bin/activate

    # Upgrade pip and install build tools in venv
    pip install --upgrade pip setuptools wheel

    # Install PyTorch with CUDA 12.1 support
    pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

    # Install core Python dependencies
    pip install \
        psycopg2-binary \
        pandas \
        pyarrow \
        flask \
        numpy \
        scipy

    # Install WhisperX with dependencies
    pip install whisperx

    # Install additional audio processing dependencies
    pip install \
        librosa \
        soundfile \
        datasets \
        transformers \
        accelerate

    # Create application directory
    mkdir -p /opt/audio_pipeline/src
    mkdir -p /opt/audio_pipeline/data
    mkdir -p /opt/audio_pipeline/temp

    # Set permissions
    chmod -R 755 /opt/audio_pipeline

%runscript
    #!/bin/bash
    . /opt/venv/bin/activate
    exec python "$@"

%help
    This container provides a complete environment for audio processing with:
    - WhisperX for GPU-accelerated speech-to-text
    - PyTorch with CUDA 12.1 support
    - FFmpeg for audio format conversion
    - PostgreSQL client libraries
    - All required Python dependencies in isolated virtual environment
    
    Usage:
    singularity run --nv audio_processing_venv.sif /path/to/script.py [args]
    
    For GPU access, always use --nv flag to bind NVIDIA drivers.
    
    Example:
    singularity run --nv audio_processing_venv.sif hpc_process_day.py --date 2024-01-15 --db-host VM_IP